{"version":3,"sources":["util/City.js","components/Current/CurrentCityHeader.js","components/CityCommon/CityInfo.js","components/Current/CurrentCity.js","components/Current.js","components/Favorite/FavoriteCityHeader.js","actions/UpdateCity.js","actions/LoadCity.js","actions/UpdateCityInfo.js","actions/CityErrored.js","actions/DeleteCity.js","components/Favorite/FavoriteCity.js","components/Favorite/FavoriteList.js","actions/AddCity.js","components/Favorite/FavoriteHeader.js","components/Favorite.js","components/Page.js","reducers/citiesReducer.js","store/store.js","reducers/reducer.js","App.js","serviceWorker.js","index.js"],"names":["getHeader","response","name","temp","parseInt","main","iconLink","weather","icon","getInfo","coord","lon","lat","wind","speed","humidity","pressure","clouds","description","CurrentCityHeader","this","props","data","className","alt","width","src","Component","CityInfo","CurrentCity","getWeather","coords","a","setState","downloading","fetch","latitude","longitude","then","ok","Error","statusText","json","cityHeader","cityInfo","error","catch","err","state","prevProps","prevState","snapshot","position","TITLE","BUTTON_TITLE","Current","CurrentHeader","onClick","getPosition","bind","defaultPosition","navigator","geolocation","getCurrentPosition","e","FavoriteCityHeader","img","download","cityName","type","getHeaderMini","FavoriteCity","Boolean","update","delete","connect","dispatch","UpdateCity","LoadCity","DeleteCity","FavoriteList","Object","entries","cities","map","city","key","FavoriteHeader","inputValue","onSubmit","preventDefault","add","placeholder","value","onChange","target","AddCity","Favorite","Page","action","newState","initialState","JSON","parse","localStorage","getItem","store","createStore","citiesReducer","applyMiddleware","reduxpromise","subscribe","setItem","stringify","getState","App","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3f018ec.chunk.js","sourcesContent":["export function getHeader(response) {\n    return {\n        name: response.name,\n        temp: parseInt(response.main.temp - 273) + \"°C\",\n        iconLink: \"https://openweathermap.org/img/wn/\" + response.weather[0].icon + \"@2x.png\"\n    }\n}\n\nexport function getHeaderMini(response) {\n    return {\n        name: response.name,\n        temp: parseInt(response.main.temp - 273) + \"°C\",\n        iconLink: \"https://openweathermap.org/img/wn/\" + response.weather[0].icon + \".png\"\n    }\n}\n\nexport function getInfo(response) {\n    return {\n        coord: response.coord.lon + \", \" + response.coord.lat,\n        wind: response.wind.speed + \" m/s\",\n        humidity: response.main.humidity + \" %\",\n        pressure: response.main.pressure + \" hpa\",\n        clouds: response.weather[0].description\n    }\n\n}\n","import React, {Component} from 'react';\nimport \"../../css/header.css\"\n\nexport class CurrentCityHeader extends Component {\n    render() {\n        let name = this.props.data.name;\n        let icon = this.props.data.iconLink;\n        let temp = this.props.data.temp;\n        return <div className=\"col-6\">\n            <div className=\"title\">{name}</div>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <img alt=\"icon\" width=\"100px\" src={icon}/>\n                </div>\n                <div className=\"col-6 temp\">{temp}</div>\n            </div>\n        </div>\n\n    }\n}\n","import React, {Component} from 'react';\n\nconst COORD = \"Координаты: \";\nconst WIND = \"Ветер: \";\nconst HUMIDITY = \"Влажность: \";\nconst PRESSURE = \"Давление: \";\nconst CLOUDS = \"Облачность: \";\n\nexport class CityInfo extends Component{\n    render() {\n        let coord = this.props.data.coord;\n        let wind = this.props.data.wind;\n        let humidity = this.props.data.humidity;\n        let pressure = this.props.data.pressure;\n        let clouds = this.props.data.clouds;\n\n        return <div>\n            <div className = \"info-row m-1 d-flex\">\n                <span>{WIND}</span>\n                <span className={\"ml-auto\"}>{wind}</span>\n            </div>\n            <div className = \"info-row m-1 d-flex\">\n                <span>{CLOUDS}</span>\n                <span className={\"ml-auto\"}>{clouds}</span>\n            </div>\n            <div className = \"info-row m-1 d-flex\">\n                <span>{PRESSURE}</span>\n                <span className={\"ml-auto\"}>{pressure}</span>\n            </div>\n            <div className = \"info-row m-1 d-flex\">\n                <span>{HUMIDITY}</span>\n                <span className={\"ml-auto\"}>{humidity}</span>\n            </div>\n            <div className = \"info-row m-1 d-flex\">\n                <span>{COORD}</span>\n                <span className={\"ml-auto\"}>{coord}</span>\n            </div>\n        </div>\n\n    }\n}\n","import React, {Component} from 'react';\nimport {getHeader, getInfo} from \"../../util/City\";\nimport {CurrentCityHeader} from \"./CurrentCityHeader\";\nimport {CityInfo} from \"../CityCommon/CityInfo\";\n\n// import {CityInfo}\n\nexport class CurrentCity extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            cityHeader: '',\n            cityInfo: '',\n            downloading: true,\n            error: false\n        };\n    }\n\n    render() {\n        return (this.state.downloading)\n            ? <div className=\"text-center \">\n                <div className=\"title\">Подождите, данные загружаются</div>\n                <div className=\"spinner-border text-secondary spin\">\n                </div>\n            </div>\n            : (this.state.error)\n                ? <div className=\"text-center\">\n                    <span className=\"title\">Упс, что-то пошло не так</span>\n                </div>\n                : <div className=\"row\">\n                        <CurrentCityHeader data={this.state.cityHeader}/>\n                    <div className={\"col-6\"}>\n                        <CityInfo data={this.state.cityInfo}/>\n                    </div>\n                </div>\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state === prevState) {\n            this.getWeather(this.props.position)\n        }\n    }\n\n    getWeather = async (coords) => {\n        this.setState({downloading: true});\n        await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${coords.latitude}&lon=${coords.longitude}&appid=2e19bb27bd5e717bac388dc0c1827b17`)\n            .then((response) => {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                return response;\n            })\n            .then((response) => response.json())\n            .then((response) => {\n                this.setState({\n                    cityHeader: getHeader(response),\n                    cityInfo: getInfo(response),\n                    error: false,\n                    downloading: false\n                });\n            })\n            .catch(err => {\n                    this.setState({\n                        error: true,\n                        downloading: false\n                    });\n                }\n            );\n\n    };\n\n\n}\n","import React, {Component} from 'react';\nimport {CurrentCity} from \"./Current/CurrentCity\";\nimport \"../css/header.css\"\n\n\nconst TITLE = \"Погода здесь\";\nconst BUTTON_TITLE = \"Обновить геопозицию\";\n\nexport class Current extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {position: this.defaultPosition};\n    }\n\n    componentDidMount() {\n        this.getPosition();\n    }\n\n    render() {\n        return <div>\n            {this.CurrentHeader}\n            <CurrentCity position={this.state.position}/>\n        </div>\n    }\n\n    CurrentHeader =\n        <div className=\"row \">\n            <div className=\"header col-5\">\n                {TITLE}\n            </div>\n            <div className=\"col-7\">\n                <button className=\"btn btn-secondary \" onClick={this.getPosition.bind(this)}>\n                    {BUTTON_TITLE}\n                </button>\n            </div>\n        </div>;\n\n    defaultPosition = {\n        latitude: 55.75,\n        longitude: 37.62\n    };\n\n    getPosition() {\n        navigator.geolocation.getCurrentPosition(position => {\n            this.setState({position: position.coords});\n\n        }, e => {\n            this.setState({position: this.defaultPosition})\n        });\n    }\n}\n","import React, {Component, Fragment} from 'react';\n\n\nexport class FavoriteCityHeader extends Component {\n\n    render() {\n        let temp, img;\n        if (!this.props.download && ! this.props.error) {\n            temp = <span className={\"p-2 ml-auto mini-temp\"}>\n                {this.props.data.temp}\n            </span>;\n            img = <img className={\"p-2 ml-auto\"} alt=\"icon\" src={this.props.data.iconLink}/>\n        }\n        return <Fragment>\n            <span className={\"title-sm\"} >\n                {this.props.name}\n            </span>\n            {temp}\n            {img}\n        </Fragment>\n    }\n\n}\n","\nexport default function (cityName) {\n    return {\n        type: 'UPDATE_CITY',\n        cityName: cityName,\n    }\n}","import {getHeaderMini, getInfo} from \"../util/City\";\nimport UpdateCityInfo from \"./UpdateCityInfo\"\nimport ErrorCity from \"./CityErrored\"\n\nexport default function (name) {\n    return fetch(`https://api.openweathermap.org/data/2.5/weather?appid=2e19bb27bd5e717bac388dc0c1827b17&q=${name}`)\n        .then((response) => {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            return response;\n        })\n        .then((response) => response.json())\n        .then((response) => {\n            return UpdateCityInfo(name, getHeaderMini(response), getInfo(response));\n        })\n        .catch(err => {\n                return ErrorCity(name)\n        });\n}","\nexport default function (cityName, cityHeader, cityInfo) {\n    return {\n        type: 'UPDATE_CITY_INFO',\n        cityName: cityName,\n        cityHeader : cityHeader,\n        cityInfo: cityInfo\n    }\n}","\nexport default function (cityName) {\n    return {\n        type: 'ERROR_CITY',\n        cityName: cityName,\n    }\n}","\nexport default function(cityName) {\n    return {\n        type: 'DELETE_CITY',\n        cityName: cityName\n    }\n}","import React, {Component} from 'react';\nimport {FavoriteCityHeader} from \"./FavoriteCityHeader\";\nimport {CityInfo} from \"../CityCommon/CityInfo\";\nimport UpdateCity from \"../../actions/UpdateCity\"\nimport LoadCity from \"../../actions/LoadCity\";\nimport DeleteCity from \"../../actions/DeleteCity\";\nimport {connect} from \"react-redux\";\n\n\nexport class FavoriteCity extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {error: false, download: !Boolean(props.cityInfo)};\n        if (!props.cityInfo) {\n            props.update(props.name);\n        }\n    }\n\n    render() {\n        let cityInfo = this.state.error\n            ? <div className={\"title-sm text-secondary ml-5\"}>Ой...</div>\n            : !this.state.download\n                ? <CityInfo data={this.props.cityInfo}/>\n                : <div><span className=\"spinner-border text-secondary ml-5 m-1 spin\"/></div>;\n        return <div>\n            <div className={\"d-flex flex-row align-items-center\"}>\n                <FavoriteCityHeader name={this.props.name} data={this.props.cityHeader} download={this.state.download} error={this.state.error}/>\n                <div className={\"ml-auto\"}>\n                    <button className={\"btn btn-circle btn-secondary\"} onClick={this.props.update.bind(null, this.props.name)}>↺</button>\n                    <button className={\"btn btn-circle btn-secondary\"} onClick={this.props.delete.bind(null, this.props.name)}>X</button>\n                </div>\n            </div>\n            {cityInfo}\n        </div>\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        return {error: Boolean(props.error), download: Boolean(props.download || !Boolean(props.cityInfo))}\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        update: (name) => {dispatch(UpdateCity(name));dispatch(LoadCity(name));},\n        delete: (name) => dispatch(DeleteCity(name))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(FavoriteCity)","import React, {Component} from 'react';\nimport FavoriteCity from \"./FavoriteCity\";\nimport {connect} from \"react-redux\";\n\n\nexport class FavoriteList extends Component {\n\n    render() {\n        return <div className={\"row\"}>\n            {Object.entries(this.props.cities).map(([cityName, city]) => {\n                return <div className={\"col-6\"} key={cityName}>\n                    <FavoriteCity name={cityName} cityInfo={city.cityInfo} cityHeader={city.cityHeader} download={city.download} error={city.error}/>\n                </div>\n            })}\n        </div>\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cities: state.cities,\n    };\n};\n\nexport default connect(mapStateToProps, null)(FavoriteList);","\nexport default function(cityName) {\n    return {\n        type: 'ADD_CITY',\n        cityName: cityName\n    }\n}","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport AddCity from \"../../actions/AddCity\";\n\nconst FAVOR = \"Избранное\";\n\nexport class FavoriteHeader extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {inputValue: ''};\n    }\n\n    render() {\n        return <form className={\"row\"} onSubmit={(e) => {\n            e.preventDefault();\n            this.props.add(this.state.inputValue)\n        }}>\n            <div className=\"header col-8\">\n                {FAVOR}\n            </div>\n            <div className={\"col d-flex\"}>\n                <input className={\"form-control mt-auto\"} placeholder={\"Добавить новый город\"} value={this.state.inputValue} onChange={(e) => {\n                    this.setState({inputValue: e.target.value})\n                }}/>\n            </div>\n            <div className={\"d-flex\"}>\n                <button type={\"submit\"} className={\"btn btn-circle btn-secondary mt-auto\"}>+</button>\n            </div>\n        </form>\n    }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        add: (name) => dispatch(AddCity(name))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(FavoriteHeader);","import React, {Component} from 'react';\r\nimport FavoriteList from \"./Favorite/FavoriteList\";\r\nimport FavoriteHeader from \"./Favorite/FavoriteHeader\";\r\n\r\n\r\nexport class Favorite extends Component {\r\n\r\n    render() {\r\n        return <div>\r\n            <FavoriteHeader/>\r\n            <FavoriteList/>\r\n        </div>\r\n    }\r\n\r\n}\r\n","import React, {Component} from 'react';\nimport {Current} from \"./Current\";\nimport {Favorite} from \"./Favorite\"\n\nexport class Page extends Component {\n    render() {\n        return (\n            <div className=\"ml-5 mr-5 mt-3 mb-3\">\n                <Current/>\n                <Favorite/>\n            </div>\n        );\n    }\n}\n","\n\n\nexport default function (cities, action) {\n    let newState;\n    switch (action.type) {\n        case \"ADD_CITY\":\n            if (!(action.cityName in cities)) {\n                return {...cities, [action.cityName]: {cityHeader: null, cityInfo: null, error: false, download: true}};\n            } else {\n                return cities\n            }\n        case \"DELETE_CITY\":\n            newState = {...cities};\n            delete newState[action.cityName];\n            return newState;\n        case \"UPDATE_CITY\":\n            newState = {...cities};\n            newState[action.cityName].error = false;\n            newState[action.cityName].download = true;\n            return newState;\n        case \"UPDATE_CITY_INFO\":\n            newState = {...cities};\n            newState[action.cityName].cityHeader = action.cityHeader;\n            newState[action.cityName].cityInfo = action.cityInfo;\n            newState[action.cityName].error = false;\n            newState[action.cityName].download = false;\n            return newState;\n        case \"ERROR_CITY\":\n            newState = {...cities};\n            newState[action.cityName].error = true;\n            newState[action.cityName].download = false;\n            return newState;\n        default:\n            return cities\n    }\n}","import {applyMiddleware, createStore} from \"redux\";\nimport reducer from \"../reducers/reducer\"\nimport reduxpromise from \"redux-promise\"\n\nlet initialState = JSON.parse(localStorage.getItem(\"cityList\")) || {cities : { }};\nlet store = createStore(reducer, initialState, applyMiddleware(reduxpromise));\n\nstore.subscribe(() => {\n    localStorage.setItem(\"cityList\", JSON.stringify(store.getState(), function (key, value) {\n        if (key === \"error\" || key === \"download\") {\n            return undefined\n        } else {\n            return value\n        }\n    }));\n});\n\nexport default store","import citiesReducer from \"./citiesReducer\";\r\n\r\n\r\nexport default function (state, action) {\r\n        return {\r\n            cities : citiesReducer(state.cities, action)\r\n        }\r\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {Provider} from 'react-redux'\nimport {Page} from \"./components/Page\";\nimport store from './store/store'\n\nfunction App() {\n  return (\n      <Provider store={store}>\n        <Page/>\n      </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}